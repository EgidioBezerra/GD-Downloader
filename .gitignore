# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# GD-Downloader specific
# ============================================

# Credential files (NEVER commit these)
credentials.json
token.json
client_secrets.json
service_account.json

# Checkpoints and temporary data
.checkpoints/
.crush/
temp_pdf_downloads/
test_checkpoints/
test_downloads/
Downloads/
download.log
*.log
CRUSH.md

# Browser automation artifacts
*.png
*.jpg
*.jpeg
*.html
temp_browser_data/
playwright-report/
test-results/

# OCR and processing files
*.ocr
*.tiff
*.pdf.processed

# Development directories
.dev/
.development/
sandbox/

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
Thumbs.db
desktop.ini

# Backup files
*.bak
*.backup
*.old

# Configuration files (keep templates, ignore user configs)
config_local.py
settings_local.py

# Google Drive specific
drive_sync/
gdrive_sync/

# Test artifacts
htmlcov/
.coverage
.pytest_cache/
test_reports/
test_artifacts/

# Performance monitoring
*.prof
*.profile

# Database files (if any)
*.db
*.sqlite
*.sqlite3

# Documentation build
docs/_build/
docs/build/

# Local development
local/
.local/

# Temporary files
tmp/
temp/
*.tmp
*.temp

# Mac OS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Linux
*~

# Node modules (if any frontend components)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Package files (keep package.json, ignore lockfiles)
package-lock.json
yarn.lock
pnpm-lock.yaml